#
# weechat -- plugins.conf
#
# WARNING: It is NOT recommended to edit this file by hand,
# especially if WeeChat is running.
#
# Use /set or similar command to change settings in WeeChat.
#
# For more info, see: https://weechat.org/doc/quickstart
#

[var]
fifo.fifo = "on"
perl.check_license = "off"
perl.highmon.alignment = "channel"
perl.highmon.away_only = "off"
perl.highmon.color_buf = "on"
perl.highmon.first_run = "true"
perl.highmon.hotlist_show = "off"
perl.highmon.logging = "off"
perl.highmon.merge_private = "off"
perl.highmon.nick_prefix = "<"
perl.highmon.nick_suffix = ">"
perl.highmon.output = "buffer"
perl.highmon.short_names = "off"
perl.sort_buffers.hook_signal = "off"
perl.sort_buffers.server_wide = "on"
perl.sort_buffers.sort_order = "default"
python.announce_url_title.announce_public = "off"
python.announce_url_title.buffers = "freenode.#testing,"
python.announce_url_title.buffers_notice = "freenode.#testing,"
python.announce_url_title.global = "off"
python.announce_url_title.global_prefix = "url"
python.announce_url_title.ignore_buffers = "grep,"
python.announce_url_title.prefix = ""
python.announce_url_title.reannounce_wait = "5"
python.announce_url_title.suffix = ""
python.announce_url_title.title_max_length = "80"
python.announce_url_title.url_ignore = ""
python.announce_url_title.user_agent = "WeeChat/%(version)s (http://www.weechat.org)"
python.check_license = "off"
python.cmd_help.color_alias = "white"
python.cmd_help.color_alias_name = "green"
python.cmd_help.color_alias_value = "green"
python.cmd_help.color_arguments = "cyan"
python.cmd_help.color_delimiters = "lightgreen"
python.cmd_help.color_list = "green"
python.cmd_help.color_list_count = "white"
python.cmd_help.color_no_help = "red"
python.cmd_help.color_option_help = "brown"
python.cmd_help.color_option_name = "yellow"
python.cmd_help.display_no_help = "on"
python.cmd_help.format_option = "(${white:type}) ${description_nls}"
python.cmd_help.ignore_commands = "map,me,die,restart"
python.cmd_help.max_options = "5"
python.cmd_help.prefix = "["
python.cmd_help.right_align = "off"
python.cmd_help.right_padding = "15"
python.cmd_help.space = "2"
python.cmd_help.start_on_load = "off"
python.cmd_help.stop_on_enter = "on"
python.cmd_help.suffix = "]"
python.cmd_help.timer = "0"
python.slack_extension.colorize_messages = "false"
python.slack_extension.colorize_nicks = "true"
python.slack_extension.colorize_private_chats = "false"
python.slack_extension.debug_mode = "false"
python.slack_extension.distracting_channels = ""
python.slack_extension.server_alias.jesttutakspokojnie = "tdl"
python.slack_extension.server_alias.nwt = "nwt"
python.slack_extension.server_alias.wmgda = "wm"
python.slack_extension.show_reaction_nicks = "false"
python.slack_extension.slack_api_token = "${sec.data.slack_token}"
python.slack_extension.slack_timeout = "20000"
python.slack_extension.switch_buffer_on_join = "true"
python.slack_extension.trigger_value = "false"
python.slack_extension.unfurl_ignore_alt_text = "false"
python.urlserver.buffer_short_name = "off"
python.urlserver.color = "darkgray"
python.urlserver.color_in_msg = ""
python.urlserver.debug = "off"
python.urlserver.display_urls = "on"
python.urlserver.display_urls_in_msg = "off"
python.urlserver.http_allowed_ips = ""
python.urlserver.http_auth = ""
python.urlserver.http_auth_redirect = "on"
python.urlserver.http_autostart = "on"
python.urlserver.http_bg_color = "#f4f4f4"
python.urlserver.http_css_url = ""
python.urlserver.http_embed_image = "off"
python.urlserver.http_embed_youtube = "off"
python.urlserver.http_embed_youtube_size = "480*350"
python.urlserver.http_fg_color = "#000"
python.urlserver.http_hostname = ""
python.urlserver.http_hostname_display = ""
python.urlserver.http_open_in_new_page = "on"
python.urlserver.http_port = ""
python.urlserver.http_port_display = ""
python.urlserver.http_prefix_suffix = " "
python.urlserver.http_scheme_display = "http"
python.urlserver.http_time_format = "%d/%m/%y %H:%M:%S"
python.urlserver.http_title = "WeeChat URLs"
python.urlserver.http_url_prefix = ""
python.urlserver.msg_filtered = "off"
python.urlserver.msg_ignore_buffers = "core.weechat,python.grep"
python.urlserver.msg_ignore_dup_urls = "off"
python.urlserver.msg_ignore_regex = ""
python.urlserver.msg_ignore_tags = "irc_quit,irc_part,notify_none"
python.urlserver.msg_require_tags = "nick_"
python.urlserver.separators = "[|]"
python.urlserver.url_min_length = "0"
python.urlserver.urls_amount = "100"
python.vimode.no_warn = "off"
tcl.check_license = "off"

[desc]
perl.sort_buffers.hook_signal = "if "on" buffers will be sort every time a buffer was opened. Keep in mind that sorting buffers will delete read_marker. (default: off)"
perl.sort_buffers.server_wide = "buffers will be sorted server wide. This option takes only effect when option "hook_signal" is on. (default: on)"
perl.sort_buffers.sort_order = "sort of buffers "default" or "reverse" order. This option takes only effect when option "hook_signal" is on. (default: default)"
python.cmd_help.color_alias = "color for text "Alias" (default: "white")"
python.cmd_help.color_alias_name = "color for alias name (default: "green")"
python.cmd_help.color_alias_value = "color for alias value (default: "green")"
python.cmd_help.color_arguments = "color for command arguments (default: "cyan")"
python.cmd_help.color_delimiters = "color for delimiters (default: "lightgreen")"
python.cmd_help.color_list = "color for list of commands/options (default: "green")"
python.cmd_help.color_list_count = "color for number of commands/options in list found (default: "white")"
python.cmd_help.color_no_help = "color for text "No help" (default: "red")"
python.cmd_help.color_option_help = "color for help on option (default: "brown")"
python.cmd_help.color_option_name = "color for name of option found (by adding "*" to option name) (default: "yellow")"
python.cmd_help.display_no_help = "display "No help" when command is not found (default: "on")"
python.cmd_help.format_option = "format of help for options: free text with identifiers using format: ${name} or ${color:name}: color is a WeeChat color (optional), name is a field of infolist "option": full_name, config_name, section_name, option_name, parent_name, description, description_nls, string_values, min, max, null_value_allowed, value_is_null, default_value_is_null, type, value, default_value (default: "(${white:type}) ${description_nls}")"
python.cmd_help.ignore_commands = "comma-separated list of commands (without leading "/") to ignore (default: "map,me,die,restart")"
python.cmd_help.max_options = "max number of options displayed in list (default: "5")"
python.cmd_help.prefix = "string displayed before help (default: "[")"
python.cmd_help.right_align = "align help to right (default: "off")"
python.cmd_help.right_padding = "padding to right when aligned to right (default: "15")"
python.cmd_help.space = "minimum space before help (default: "2")"
python.cmd_help.start_on_load = "auto start help when script is loaded (default: "off")"
python.cmd_help.stop_on_enter = "enter key stop help (default: "on")"
python.cmd_help.suffix = "string displayed after help (default: "]")"
python.cmd_help.timer = "number of seconds help is displayed (0 = display until help is toggled) (default: "0")"
python.urlserver.buffer_short_name = "use buffer short name on dedicated buffer (default: "off")"
python.urlserver.color = "color for urls displayed after message (default: "darkgray")"
python.urlserver.color_in_msg = "color for urls displayed inside irc message: it is a number (irc color) between 00 and 15 (see doc for a list of irc colors) (default: "")"
python.urlserver.debug = "print some debug messages (default: "off")"
python.urlserver.display_urls = "display URLs below messages (default: "on")"
python.urlserver.display_urls_in_msg = "add shorten url next to the original url (only in IRC messages) (useful for urlserver behind relay/irc) (default: "off")"
python.urlserver.http_allowed_ips = "regex for IPs allowed to use server (example: "^(123.45.67.89|192.160.*)$") (default: "")"
python.urlserver.http_auth = "login and password (format: "login:password") required to access to page with list of URLs (note: content is evaluated, see /help eval) (default: "")"
python.urlserver.http_auth_redirect = "require the login/password (if option "http_auth" is set) for URLs redirections (default: "on")"
python.urlserver.http_autostart = "start the built-in HTTP server automatically) (default: "on")"
python.urlserver.http_bg_color = "background color for HTML page (default: "#f4f4f4")"
python.urlserver.http_css_url = "URL of external Cascading Style Sheet to add (BE CAREFUL: the HTTP referer will be sent to site hosting CSS file!) (empty value = use default embedded CSS) (default: "")"
python.urlserver.http_embed_image = "embed images in HTML page (BE CAREFUL: the HTTP referer will be sent to site hosting image!) (default: "off")"
python.urlserver.http_embed_youtube = "embed youtube videos in HTML page (BE CAREFUL: the HTTP referer will be sent to youtube!) (default: "off")"
python.urlserver.http_embed_youtube_size = "size for embedded youtube video, format is "xxx*yyy" (default: "480*350")"
python.urlserver.http_fg_color = "foreground color for HTML page (default: "#000")"
python.urlserver.http_hostname = "force hostname/IP in bind of socket (empty value = auto-detect current hostname) (default: "")"
python.urlserver.http_hostname_display = "display this hostname in shortened URLs (default: "")"
python.urlserver.http_open_in_new_page = "open links in new pages/tabs (default: "on")"
python.urlserver.http_port = "force port for listening (empty value = find a random free port) (default: "")"
python.urlserver.http_port_display = "display this port in shortened URLs. Useful if you forward a different external port to the internal port (default: "")"
python.urlserver.http_prefix_suffix = "suffix displayed between prefix and message in HTML page (default: " ")"
python.urlserver.http_scheme_display = "display this scheme in shortened URLs (default: "http")"
python.urlserver.http_time_format = "time format in the HTML page (default: "%d/%m/%y %H:%M:%S")"
python.urlserver.http_title = "title of the HTML page (default: "WeeChat URLs")"
python.urlserver.http_url_prefix = "prefix to add in URLs to prevent external people to scan your URLs (for example: prefix "xx" will give URL: http://host.com:1234/xx/8) (default: "")"
python.urlserver.msg_filtered = "shorten URLs in filtered messages (with /filter) (default: "off")"
python.urlserver.msg_ignore_buffers = "comma-separated list (without spaces) of buffers to ignore (full name like "irc.freenode.#weechat") (default: "core.weechat,python.grep")"
python.urlserver.msg_ignore_dup_urls = "ignore duplicated URLs (do not add an URL in list if it is already) (default: "off")"
python.urlserver.msg_ignore_regex = "ignore messages matching this regex (default: "")"
python.urlserver.msg_ignore_tags = "comma-separated list (without spaces) of tags (or beginning of tags) to ignore (for example, use "notify_none" to ignore self messages or "nick_weebot" to ignore messages from nick "weebot") (default: "irc_quit,irc_part,notify_none")"
python.urlserver.msg_require_tags = "comma-separated list (without spaces) of tags (or beginning of tags) required to shorten URLs (for example "nick_" to shorten URLs only in messages from other users) (default: "nick_")"
python.urlserver.separators = "separators for short url list (string with exactly 3 chars) (default: "[|]")"
python.urlserver.url_min_length = "minimum length for an URL to be shortened (0 = shorten all URLs, -1 = detect length based on shorten URL) (default: "0")"
python.urlserver.urls_amount = "number of URLs to keep in memory (and in file when script is not loaded) (default: "100")"
python.vimode.no_warn = "don't warn about problematickeybindings and tmux/screen (default: "off")"
